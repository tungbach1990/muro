name: Node.js CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Get version from package.json
      id: version
      run: echo "VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV          
      
    - name: Build image
      run: docker build -t argocd.ranchermobiz.online/sr90/phoenix-logistics:${{ env.VERSION }} .
      
    - name: Deploy to Registry
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin argocd.ranchermobiz.online
        echo "wait"
        docker push argocd.ranchermobiz.online/sr90/phoenix-logistics:${{ env.VERSION }}     

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Get version from package.json
      id: version
      run: echo "VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV      
    - name: Install OpenVPN
      run: sudo apt-get update && sudo apt-get install -y openvpn

    - name: Configure OpenVPN
      run: |
        echo "${{ secrets.OPENVPN_CONFIG }}" > openvpn-config.ovpn
        echo "${{ secrets.OPENVPN_USERNAME }}" > vpn-auth.txt
        echo "${{ secrets.OPENVPN_PASSWORD }}" >> vpn-auth.txt

    - name: Connect to VPN
      run: sudo openvpn --config openvpn-config.ovpn --auth-user-pass vpn-auth.txt --daemon

    - name: Wait for VPN to establish
      run: sleep 10 # Adjust sleep duration as needed

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/phoenix-logistics phoenix-logistics=argocd.ranchermobiz.online/sr90/phoenix-logistics:${{ env.VERSION }} -n 3q
        kubectl rollout status deployment/phoenix-logistics -n 3q      
